{
-- | Lex module containing utilities for lexical analyzing. The code is
-- generated by Alex.
module Lex where
}

%wrapper "basic" -- FIXME: choose a wrapper

$digit = [0-9]
$alpha = [a-zA-Z]

tokens :-
    $white+                     ;
    "{"                         { \_ -> TLeftCrBrace }
    "}"                         { \_ -> TRightCrBrace }
    "struct"                    { \_ -> TStruct }
    $alpha [$alpha $digit \_]*  { \s -> TIdent s}

{
-- | Parsiuk token. The type is not yet fully implemented.
data Token = TLeftCrBrace -- ^ Left curly brace
           | TRightCrBrace -- ^ Right curly brace
           | TStruct -- ^ "struct" keyword
           | TIdent String -- ^ Indentifier: the name of a structure, variable etc.
    deriving Show
}
